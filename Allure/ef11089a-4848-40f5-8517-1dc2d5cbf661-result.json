{"name": "test_homepage_validation", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=131.0.6778.205)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6C796FB05+28789]\n\t(No symbol) [0x00007FF6C78D86E0]\n\t(No symbol) [0x00007FF6C777592A]\n\t(No symbol) [0x00007FF6C774F505]\n\t(No symbol) [0x00007FF6C77F6477]\n\t(No symbol) [0x00007FF6C780EF42]\n\t(No symbol) [0x00007FF6C77EF1E3]\n\t(No symbol) [0x00007FF6C77BA938]\n\t(No symbol) [0x00007FF6C77BBAA1]\n\tGetHandleVerifier [0x00007FF6C7CA933D+3410093]\n\tGetHandleVerifier [0x00007FF6C7CBE7DD+3497293]\n\tGetHandleVerifier [0x00007FF6C7CB2A73+3448803]\n\tGetHandleVerifier [0x00007FF6C7A37BBB+848171]\n\t(No symbol) [0x00007FF6C78E3C3F]\n\t(No symbol) [0x00007FF6C78DF6E4]\n\t(No symbol) [0x00007FF6C78DF87D]\n\t(No symbol) [0x00007FF6C78CED49]\n\tBaseThreadInitThunk [0x00007FFC3B7C259D+29]\n\tRtlUserThreadStart [0x00007FFC3DB0AF38+40]", "trace": "self = <PT_scripts.Test_stakify.Test_Stakify_e2e object at 0x000002040EB0B9D0>\nreadJson = {'Email': 'jayannajay7@gmail.com', 'First_name': 'jayanna', 'Item_1': 'Sauce Labs Backpack', 'Item_2': 'Sauce Labs Bike Light', ...}\n\n    def test_homepage_validation(self, readJson):\n        homepage = Stakifyy_page_object(self.driver)  # Activating the driver which we have created in supporting file (qualitrix_page_object.py).\n        homepage.launch_the_app(readJson['stakify_url'])\n        homepage.validate_headermenu()\n        homepage.test_mouseoveraction()\n        homepage.test_languages()\n        homepage.test_click_ruby()\n        homepage.test_validate_checkboxes()\n        homepage.click_reviewdoclink()\n        homepage.test_validating_buttons()\n        homepage.test_schedule_demo()\n        homepage.test_fillthe_details(readJson)\n>       homepage.mouseover_solutions(readJson)\n\nPT_scripts\\Test_stakify.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPage_objects\\Stackify_page_objects.py:238: in mouseover_solutions\n    self.driver.find_element(By.XPATH,Stackify_locators.sandbox_email()).send_keys(readJson[\"Email\"])\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002040EC26270>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6C78CED49]\\\\n\\\\tBaseThreadInitThunk [0x00007FFC3B7C259D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFC3DB0AF38+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=131.0.6778.205)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6C796FB05+28789]\nE       \t(No symbol) [0x00007FF6C78D86E0]\nE       \t(No symbol) [0x00007FF6C777592A]\nE       \t(No symbol) [0x00007FF6C774F505]\nE       \t(No symbol) [0x00007FF6C77F6477]\nE       \t(No symbol) [0x00007FF6C780EF42]\nE       \t(No symbol) [0x00007FF6C77EF1E3]\nE       \t(No symbol) [0x00007FF6C77BA938]\nE       \t(No symbol) [0x00007FF6C77BBAA1]\nE       \tGetHandleVerifier [0x00007FF6C7CA933D+3410093]\nE       \tGetHandleVerifier [0x00007FF6C7CBE7DD+3497293]\nE       \tGetHandleVerifier [0x00007FF6C7CB2A73+3448803]\nE       \tGetHandleVerifier [0x00007FF6C7A37BBB+848171]\nE       \t(No symbol) [0x00007FF6C78E3C3F]\nE       \t(No symbol) [0x00007FF6C78DF6E4]\nE       \t(No symbol) [0x00007FF6C78DF87D]\nE       \t(No symbol) [0x00007FF6C78CED49]\nE       \tBaseThreadInitThunk [0x00007FFC3B7C259D+29]\nE       \tRtlUserThreadStart [0x00007FFC3DB0AF38+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "attachments": [{"name": "stdout", "source": "e725e54c-a7c9-4d66-b70a-baf35741227f-attachment.txt", "type": "text/plain"}], "start": 1735718058973, "stop": 1735718127033, "uuid": "d9251966-f084-46dd-a071-efed561fea0d", "historyId": "ac40a900b0917df8627c11f70867f053", "testCaseId": "ac40a900b0917df8627c11f70867f053", "fullName": "PT_scripts.Test_stakify.Test_Stakify_e2e#test_homepage_validation", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('browser_crbt')"}, {"name": "parentSuite", "value": "PT_scripts"}, {"name": "suite", "value": "Test_stakify"}, {"name": "subSuite", "value": "Test_Stakify_e2e"}, {"name": "host", "value": "Jayanna"}, {"name": "thread", "value": "11644-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "PT_scripts.Test_stakify"}]}